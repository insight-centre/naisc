dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.10.0.pr2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.0.pr2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.10.0.pr2'
    implementation 'org.apache.commons:commons-math3:3.5'
    implementation 'net.sf.jopt-simple:jopt-simple:4.9'
    implementation 'it.unimi.dsi:fastutil:7.0.11'
    testImplementation 'junit:junit:4.13.1'
    implementation 'org.apache.commons:commons-lang3:3.4'
    implementation 'org.apache.jena:jena-arq:3.9.0'
    implementation 'tw.edu.ntu.csie:libsvm:3.17'
    implementation 'org.slf4j:slf4j-nop:1.7.25'
    implementation 'org.apache.commons:commons-text:1.7'
    implementation group: 'org.jetbrains', name: 'annotations', version: '19.0.0'
    implementation group: 'org.apache.jena', name: 'jena-rdfconnection', version: '3.9.0'
}

task jarWithDeps(type: Jar, dependsOn: build) {
    manifest {
        attributes 'Implementation-Title': 'Naisc Linking Tool',
            'Implementation-Version': version,
            'Main-Class': 'org.insightcentre.uld.naisc.main.Main'
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    baseName = project.name + '-all'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task runNaisc(type: JavaExec, dependsOn: 'classes') {
    main = "org.insightcentre.uld.naisc.main.Main"
    classpath = sourceSets.main.runtimeClasspath
    if (project.hasProperty("appArgs")) {
        args appArgs.split(" ")
    }
}

task train(type: JavaExec, dependsOn: 'classes') {
    main = "org.insightcentre.uld.naisc.main.MultiTrain"
    classpath = sourceSets.main.runtimeClasspath
    if (project.hasProperty("appArgs")) {
        args appArgs.split(" ")
    }
}

